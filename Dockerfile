FROM node:lts-alpine AS build

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache git python3 make g++

# Install pnpm
RUN npm install -g pnpm

# Copy files for install
#COPY package.json  ./
COPY package.json pnpm-lock.yaml ./

# Install dependencies
#RUN pnpm install
RUN pnpm install --frozen-lockfile

# Copy package files
#COPY package*.json ./

# Install all dependencies (need dev deps for TypeScript compilation)
#RUN npm ci

# Copy source code
COPY . .

# Build the TypeScript code
#RUN pnpm run build-esm

# Start the server directly with node
#CMD ["node", "dist/index.js"]
# Runtime image
#FROM node:lts-alpine AS runtime
#WORKDIR /app
## Copy application files
#COPY --chown=node:node --from=build /app/package.json ./package.json
#COPY --chown=node:node --from=build /app/build ./build
#COPY --chown=node:node --from=build /app/assets ./assets
#COPY --chown=node:node --from=build /app/drizzle ./drizzle
#
## Copy installed node_modules
#COPY --chown=node:node --from=build /app/node_modules ./node_modules

# Drop privileges: run as non-root user provided by the base image
USER node

EXPOSE 8787

# Set transport mode to HTTP
ENV TRANSPORT=http

# Use stdio server entrypoint
CMD ["pnpx","wrangler","dev"]
#CMD ["node", "build/esm/mapTraveler.js"]

# Generated by https://smithery.ai. See: https://smithery.ai/docs/build/project-config
#FROM node:lts-alpine AS build
#WORKDIR /app

## Install build dependencies
#RUN apk add --no-cache git python3 make g++
#
## Install pnpm
#RUN npm install -g pnpm
#
## Copy files for install
#COPY package.json pnpm-lock.yaml ./
#
## Install dependencies
#RUN pnpm install --frozen-lockfile
#
## Copy source and build
#COPY . .
#RUN pnpm run build-esm
#
## Runtime image
##FROM node:lts-alpine AS runtime
##WORKDIR /app
#
## Copy application files
#COPY --chown=node:node --from=build /app/package.json ./package.json
#COPY --chown=node:node --from=build /app/build ./build
#COPY --chown=node:node --from=build /app/assets ./assets
#COPY --chown=node:node --from=build /app/drizzle ./drizzle
#
## Copy installed node_modules
#COPY --chown=node:node --from=build /app/node_modules ./node_modules
#
## Drop privileges: run as non-root user provided by the base image
#USER node
#
## Use stdio server entrypoint
#ENTRYPOINT ["node", "build/esm/mapTraveler.js"]
